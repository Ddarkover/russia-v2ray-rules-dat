name: Build and Release Geodata

on:
  workflow_dispatch:
  schedule:
    - cron: "30 3,9,15,21 * * *"
  push:
    branches: [master]
    paths-ignore: ["**/README.md"]

env:
  GEOIP_URL: https://raw.githubusercontent.com/Ddarkover/russia-blocked-geoip/release/geoip.dat
  GEOSITE_URL: https://raw.githubusercontent.com/Ddarkover/russia-blocked-geosite/release/geosite.dat

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set release variables
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M)
          echo "RELEASE_NAME=Released on $TIMESTAMP" >> $GITHUB_ENV
          echo "TAG_NAME=$TIMESTAMP" >> $GITHUB_ENV

      - name: Checkout converter
        uses: actions/checkout@v4
        with:
          repository: runetfreedom/geodat2srs
          path: geodat2srs

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./geodat2srs/go.mod
          cache-dependency-path: ./geodat2srs/go.sum

      - name: Download source files
        run: |
          mkdir -p publish
          
          # Download files in parallel
          {
            curl -fsSL "$GEOIP_URL" -o publish/geoip.dat &
            curl -fsSL "$GEOIP_URL.sha256sum" -o publish/geoip.dat.sha256sum &
            curl -fsSL "$GEOSITE_URL" -o publish/geosite.dat &
            curl -fsSL "$GEOSITE_URL.sha256sum" -o publish/geosite.dat.sha256sum &
            wait
          }

      - name: Build converter and generate sing-box files
        run: |
          # Build converter
          go build -C geodat2srs -ldflags="-s -w" ./
          
          # Create output directory
          mkdir -p tmp/sing-box
          
          # Convert files in parallel
          {
            ./geodat2srs/geodat2srs geoip -i publish/geoip.dat -o tmp/sing-box/rule-set-geoip/ &
            ./geodat2srs/geodat2srs geosite -i publish/geosite.dat -o tmp/sing-box/rule-set-geosite/ &
            wait
          }
          
          # Create archive
          (cd tmp/sing-box && zip -r ../../publish/sing-box.zip .)

      - name: Create release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.TAG_NAME }}
          file_glob: true
          file: publish/*
          overwrite: true

      - name: Update release branch
        run: |
          # Prepare files for release branch
          rm -f publish/sing-box.zip
          mv tmp/sing-box publish/
          
          # Configure git and push
          cd publish
          git init -q
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add -A
          git commit -m "$RELEASE_NAME"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -fq origin release
